@import url('../../global_type_color.css');

.header {
    display: flex;
    justify-content: center;
    align-items: center;
    gap: 1rem;
    padding: 2rem;

    background-color: #0f0f0fbd;
    color: white;
}

.header img {
    width: 5rem;
}

.searchBar {
    display: flex;
    gap: 1rem;
    align-items: center;

    margin: 1rem 2rem 1rem 2rem;

    background-color: rgba(255, 255, 255, 0.733);
    border: 1px solid #0f0f0f49;
    border-radius: .5rem;
    font-size: 1.5rem;
    padding: .5rem;
    
}

.searchBar input {
    background-color: rgba(255, 255, 255, 0.733);
    outline: none;
    border: none;
    width: 90%;
    color: #0f0f0fab;
    font-weight: 500;
    font-size: 1.1rem;
}

.typeCardContainer {
    display: flex;
    flex-wrap: wrap;
    gap: .4rem;



    margin: 2rem 3rem;
}

.typeCard {
    min-width: 5rem;

    color: #f3f3f3;
    text-align: center;
    font-size: .7rem;
    text-transform: uppercase;
    display: inline-block;
    padding: .4rem;
    
    border-radius: 1rem;
}

.typeCard:hover {
    cursor: pointer;
    background-color: rgba(0, 0, 0, 0.1);
}

/* Container que agrupa os botões */
.selectedTypes {
    display: flex;
    justify-content: center;  /* Centraliza horizontalmente */
    align-items: center;      /* Centraliza verticalmente (se tiver altura) */
    flex-wrap: wrap;          /* Quebra linha se ultrapassar a largura */
    gap: 12px;                /* Espaço entre os botões */
    margin: 20px 0;           /* Espaço em cima e embaixo */
}

/* Botões de tipo */
.typeButton {
    display: inline-flex;      /* Para alinhar o texto e o X na horizontal */
    align-items: center;       /* Centralizar verticalmente o conteúdo */
    background-color: #f5f5f5; /* Cor padrão, caso não haja classe de tipo */
    color: #333;
    border: none;
    outline: none;             /* Remove a borda de foco */
    padding: 8px 16px;
    border-radius: 9999px;     /* Deixa no formato "pill" */
    cursor: pointer;
    font-size: 14px;
    font-weight: 500;
    text-transform: capitalize; /* "fire" -> "Fire" */
    transition: transform 0.2s ease, box-shadow 0.2s ease;
}

.typeButton:hover {
    transform: translateY(-2px);
    box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
}

.typeButton:active {
    transform: translateY(0);
    box-shadow: none;
}

/* Ícone de fechar (X) */
.closeIcon {
    margin-left: 8px; /* Espaço entre o texto do tipo e o X */
    font-weight: bold;
}

/* Remover outline ao focar no botão */
.typeButton:focus {
    outline: none;
}

.ground {
    background-color: var(--ground);
    color: #fff;
}
.grass {
    background-color: var(--grass);
    color: #fff;
}
.poison {
    background-color: var(--poison);
    color: #fff;
}
.fire {
    background-color: var(--fire);
    color: #fff;
}
.normal{
    background-color: var(--normal);
    color: #fff;
}
.fighting{
    background-color: var(--fighting);
    color: #fff;
}
.flying{
    background-color: var(--flying);
    color: #fff;
}
.ground{
    background-color: var(--ground);
    color: #fff;
}
.rock{
    background-color: var(--rock);
    color: #fff;
}
.bug{
    background-color: var(--bug);
    color: #fff;
}
.ghost{
    background-color: var(--ghost);
    color: #fff;
}
.steel{
    background-color: var(--steel);
    color: #fff;
}
.water{
    background-color: var(--water);
    color: #fff;
}
.electric{
    background-color: var(--electric);
    color: #fff;
}
.psychic{
    background-color: var(--psychic);
    color: #fff;
}
.ice{
    background-color: var(--ice);
    color: #fff;
}
.dragon{
    background-color: var(--dragon);
    color: #fff;
}
.dark{
    background-color: var(--dark);
    color: #fff;
}
.fairy{
    background-color: var(--fairy);
    color: #fff;
}
.stellar{
    background-color: var(--stellar);
    color: #fff;
}
.unknown{
    background-color: var(--unknown);
    color: #fff;
}
